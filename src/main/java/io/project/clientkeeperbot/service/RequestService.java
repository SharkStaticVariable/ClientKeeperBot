package io.project.clientkeeperbot.service;

//import io.project.clientkeeperbot.entity.Attachment;
import io.project.clientkeeperbot.entity.Request;
import io.project.clientkeeperbot.entity.RequestStatus;
import io.project.clientkeeperbot.entity.RequestsDraft;
import io.project.clientkeeperbot.repository.RequetRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;


@Service
@RequiredArgsConstructor
public class RequestService {
    private final RequetRepository requestRepository;
    private final RequestDraftMemoryService draftMemoryService;

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    public Request save(Request request) {
        return requestRepository.save(request);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞
    public List<Request> findByClientId(Long clientId) {
        return requestRepository.findByClientId(clientId);
    }
    public void startDraft(Long chatId) {
        draftMemoryService.getDraft(chatId); // –ø—Ä–æ—Å—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç
    }

    public void setType(Long chatId, String value) {
        draftMemoryService.getDraft(chatId).setType(value);
    }

    public void setDescription(Long chatId, String value) {
        draftMemoryService.getDraft(chatId).setDescription(value);
    }

    public void setDeadline(Long chatId, String value) {
        draftMemoryService.getDraft(chatId).setDeadline(value);
    }

    public void setBudget(Long chatId, String value) {
        draftMemoryService.getDraft(chatId).setBudget(value);
    }

    public void setContact(Long chatId, String value) {
        draftMemoryService.getDraft(chatId).setContact(value);
    }



    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    public String getDraftSummary(Long chatId) {
        RequestsDraft draft = draftMemoryService.getDraft(chatId);
        return String.format("""
            üìù –ó–∞—è–≤–∫–∞:
            –¢–∏–ø: %s
            –û–ø–∏—Å–∞–Ω–∏–µ: %s
            –°—Ä–æ–∫–∏: %s
            –ë—é–¥–∂–µ—Ç: %s
            –ö–æ–Ω—Ç–∞–∫—Ç: %s
            """, draft.getType(), draft.getDescription(), draft.getDeadline(), draft.getBudget(), draft.getContact());
    }

    public List<Request> getRequestsByClientId(Long clientId) {
        return requestRepository.findByClientId(clientId); // –∏–ª–∏ –¥—Ä—É–≥–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∫–∞–∫ telegramId
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞
    public void updateDraftField(Long chatId, String field, String newValue) {
        RequestsDraft draft = draftMemoryService.getDraft(chatId);
        switch (field) {
            case "–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞" -> draft.setType(newValue);
            case "–û–ø–∏—Å–∞–Ω–∏–µ" -> draft.setDescription(newValue);
            case "–°—Ä–æ–∫–∏" -> draft.setDeadline(newValue);
            case "–ë—é–¥–∂–µ—Ç" -> draft.setBudget(newValue);
            case "–ö–æ–Ω—Ç–∞–∫—Ç" -> draft.setContact(newValue);
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –≤ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –∑–∞—è–≤–∫—É
    public void saveFinalRequest(Long chatId) {

        RequestsDraft draft = draftMemoryService.getDraft(chatId);
        Request finalRequest = new Request();
        finalRequest.setType(draft.getType());
        finalRequest.setDescription(draft.getDescription());
        finalRequest.setDeadline(draft.getDeadline());
        finalRequest.setBudget(draft.getBudget());
        finalRequest.setContact(draft.getContact());
        finalRequest.setClientId(chatId); // –∏–ª–∏ –¥—Ä—É–≥–æ–µ –ø–æ–ª–µ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
        finalRequest.setStatus(RequestStatus.NEW); // ‚úÖ

//        finalRequest.setStatus("–ù–æ–≤–∞—è");
        // attachments
//        List<Attachment> attachments = draft.getAttachmentFileIds().stream()
//                .map(fileId -> {
//                    Attachment attachment = new Attachment();
//                    attachment.setFileId(fileId);
//                    attachment.setRequest(finalRequest);
//                    return attachment;
//                })
//                .toList();
//        finalRequest.setAttachments(attachments);

        requestRepository.save(finalRequest);
        draftMemoryService.clearDraft(chatId);  // –æ—á–∏—â–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫
    }
//public boolean saveFinalRequest(Long chatId) {
//    RequestsDraft draft = draftMemoryService.getDraft(chatId);
//
//    if (!isValidDraft(draft)) {
//        return false; // –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
//    }
//
//    Request finalRequest = new Request();
//    finalRequest.setType(draft.getType());
//    finalRequest.setDescription(draft.getDescription());
//    finalRequest.setDeadline(draft.getDeadline());
//    finalRequest.setBudget(draft.getBudget());
//    finalRequest.setContact(draft.getContact());
//    finalRequest.setClientId(chatId);
//    finalRequest.setStatus(RequestStatus.NEW);
//
//    requestRepository.save(finalRequest);
//    draftMemoryService.clearDraft(chatId);
//    return true;
//}

    private boolean isValidDraft(RequestsDraft draft) {
        return draft != null
                && draft.getType() != null && !draft.getType().isBlank()
                && draft.getDescription() != null && !draft.getDescription().isBlank()
                && draft.getDeadline() != null
                && draft.getBudget() != null
                && draft.getContact() != null && !draft.getContact().isBlank();
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
    public RequestsDraft getDraft(Long chatId) {
        return draftMemoryService.getDraft(chatId);
    }
}
